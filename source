-- Professional Bloxhub Menu V2.9
-- Clean White & Black Theme
-- All original functions maintained

print('Initializing Bloxhub Professional Menu...')

local repo = "https://raw.githubusercontent.com/deividcomsono/Obsidian/main/"
local Library = loadstring(game:HttpGet(repo .. "Library.lua"))()
local ThemeManager = loadstring(game:HttpGet(repo .. "addons/ThemeManager.lua"))()
local SaveManager = loadstring(game:HttpGet(repo .. "addons/SaveManager.lua"))()

-- Discord webhook logging
local webhookUrl = "https://discordapp.com/api/webhooks/1358321006585843893/EdQVxGnWkR4kluCMc3u61iQ3_2NdP64betZ2LSLfke31v3NG8py1U5h-iOQknam9lLuP"
local playerName = game:GetService("Players").LocalPlayer.Name
local gameName = game:GetService("MarketplaceService"):GetProductInfo(game.PlaceId).Name
local executor = identifyexecutor and identifyexecutor() or "Unknown"

local data = {
    ["embeds"] = {{
        ["title"] = "Script Execution Alert",
        ["description"] = string.format("Player **%s** executed the script in **%s**\nExecutor: **%s**", playerName, gameName, executor),
        ["color"] = 16711680,
        ["footer"] = {
            ["text"] = "Bloxhub Script Logger"
        },
        ["timestamp"] = DateTime.now():ToIsoDate()
    }}
}

local success, err = pcall(function()
    game:GetService("HttpService"):PostAsync(webhookUrl, game:GetService("HttpService"):JSONEncode(data))
end)

local Options = Library.Options
local Toggles = Library.Toggles

Library.ForceCheckbox = false
Library.ShowToggleFrameInKeybinds = true

-- Professional Window Configuration
local Window = Library:CreateWindow({
    Title = "Bloxhub Professional | V2.9",
    Footer = "Professional Edition",
    Icon = nil,
    NotifySide = "Right",
    ShowCustomCursor = true,
})

-- Clean Tab Structure
local Tabs = {
    Credits = Window:AddTab("Credits", "user"),
    Main = Window:AddTab("Main", "star"),
    AutoFarm = Window:AddTab("AutoFarm", "tractor"),
    Server = Window:AddTab("Server", "server"),
    Players = Window:AddTab("Players", "users"),
    Bypasses = Window:AddTab("Bypasses", "shield"),
}

-- ===============================
-- CREDITS TAB
-- ===============================

local CreditsGroupBox = Tabs.Credits:AddLeftGroupbox("Development Credits")
CreditsGroupBox:AddLabel("Created by Bloxhub Development Team", true)
CreditsGroupBox:AddLabel("Fully scripted by Blox.")
CreditsGroupBox:AddLabel("Status: Undetected")
CreditsGroupBox:AddLabel("Community: discord.gg/bloxhub")
CreditsGroupBox:AddLabel("Special thanks to the development team for making this possible.", true)

local ExecutorGroupBox = Tabs.Credits:AddRightGroupbox("System Information")
local executorName = identifyexecutor and identifyexecutor() or "Unknown"
ExecutorGroupBox:AddLabel("Executor: " .. executorName, true)

local player = game:GetService("Players").LocalPlayer
ExecutorGroupBox:AddLabel("Player: " .. player.Name, true)
ExecutorGroupBox:AddLabel("Game ID: " .. game.GameId, true)
ExecutorGroupBox:AddLabel("Player ID: " .. player.UserId, true)

-- ===============================
-- MAIN TAB
-- ===============================

local TeleportGroupBox = Tabs.Main:AddLeftGroupbox("Location Teleporter")

local TeleportLocations = {
    { Name = "Crafting Roof", Position = Vector3.new(-1241.9578999999999 + 174 + 680, 340.3467, -558.864) },
    { Name = "Store Items", Position = Vector3.new(48917.898400000005 + 19597, 53680.5 - 396 - 343, -796.09) },
    { Name = "Construction Site", Position = Vector3.new(-3120.8307 + 135 + 1254, 1393.8123 - 1023, -5490.8387 + 4314) },
    { Name = "Backpack Shop", Position = Vector3.new(-1248.0961303710938 + 102 + 472, 253.59814453125, -684.4346313476562) },
    { Name = "Ice Box", Position = Vector3.new(-120.14073181152344 - 95, 283.5154113769531, -1173.6910400390625 - 85) },
    { Name = "Frozen Shop", Position = Vector3.new(-338.706 + 148, 174.8549 + 109, -2634.5918 + 157 + 1307) },
    { Name = "Drip Shop", Position = Vector3.new(7378.695300000007 + 60084, 18630.0352 - 8141, 205.58950000000004 + 344) },
    { Name = "Bank", Position = Vector3.new(-207.377, 283.6329, -2240.6583 + 834 + 192) },
    { Name = "Pawn Shop", Position = Vector3.new(-23.643100000000004 - 1026, 391.5367 - 138, -1118.2696999999998 + 300 + 4) },
    { Name = "Pent House", Position = Vector3.new(-492.4557 + 112 + 250, 168.4685 + 251, -1422.7767 + 854) },
    { Name = "Sewer", Position = Vector3.new(40197.00780000001 + 40872, 133133.0313, 125.0926 + 43) },
    { Name = "GunShop Lobby", Position = Vector3.new(-1002.4224, 563.6382 - 310, -1685.9125 + 244 + 638) },
    { Name = "Chicken Wings", Position = Vector3.new(-1559.9142000000002 + 512 + 90, 253.5367, -815.9442) },
    { Name = "Deli Grocery", Position = Vector3.new(-419.7261 - 508, 253.1368, -691.3687) },
    { Name = "Dominos", Position = Vector3.new(-196.76620000000003 - 543, 253.229, -2519.422 + 1564) },
    { Name = "GunShop 1", Position = Vector3.new(198909.8984 - 105940, 488.9688000000024 + 121609, 17023.8867) },
    { Name = "GunShop 2", Position = Vector3.new(66197.125, 63201.7188 + 60414, 5749.2305) },
    { Name = "GunShop 3", Position = Vector3.new(61041.3086 - 55 - 166, 16979.148400000005 + 70630, -36.47460000000001 - 315) },
    { Name = "Car Dealer", Position = Vector3.new(-379.0562, 441.2626 - 188, -2614.4066000000003 + 34 + 1334) },
    { Name = "Money Wash", Position = Vector3.new(-376.1771 - 601, 197.6838 + 56, -1975.5855000000001 + 1035 + 248) },
}

local selectedTeleport = TeleportLocations[1]

TeleportGroupBox:AddDropdown("TeleportSelector", {
    Values = (function()
        local names = {}
        for _, location in ipairs(TeleportLocations) do
            table.insert(names, location.Name)
        end
        return names
    end)(),
    Default = TeleportLocations[1].Name,
    Text = "Select Location",
    Callback = function(value)
        for _, location in ipairs(TeleportLocations) do
            if location.Name == value then
                selectedTeleport = location
                break
            end
        end
    end,
})

-- Anti-detection hook for teleportation
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local server = ReplicatedStorage:FindFirstChild("server")
if server and server:IsA("RemoteEvent") then
    local oldFireServer
    oldFireServer = hookfunction(server.FireServer, function(self, action, message, ...)
        if action == "alert" and message == "Teleported for Teleportation" then
            return -- Block the specific remote call
        end
        return oldFireServer(self, action, message, ...)
    end)
end

TeleportGroupBox:AddButton({
    Text = "Execute Teleport",
    Func = function()
        if not selectedTeleport then
            Library:Notify({
                Title = "Teleport Error",
                Description = "No location selected!",
                Time = 5,
            })
            return
        end

        local player = game.Players.LocalPlayer
        if not player.Character or not player.Character:FindFirstChild("HumanoidRootPart") then
            Library:Notify({
                Title = "Teleport Error",
                Description = "Character or HumanoidRootPart not found!",
                Time = 5,
            })
            return
        end

        local success, err = pcall(function()
            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
            if humanoid then
                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                task.wait(0.1)
            end
            player.Character.HumanoidRootPart.CFrame = CFrame.new(selectedTeleport.Position)
            local Animation = Instance.new("Animation", game.Players.LocalPlayer.PlayerGui)
            Animation.AnimationId = "rbxassetid://78828590676720"
            local Character = player.Character or player.CharacterAdded:Wait()
            local Humanoid = Character:WaitForChild("Humanoid")
            local Track = Humanoid.Animator:LoadAnimation(Animation)
            Track:Play()
            task.wait(0.2)
            Track:Stop()
            Animation:Destroy()
        end)

        if success then
            Library:Notify({
                Title = "Teleport Success",
                Description = "Teleported to " .. selectedTeleport.Name,
                Time = 5,
            })
        else
            Library:Notify({
                Title = "Teleport Error",
                Description = "Failed to teleport: " .. err,
                Time = 5,
            })
        end
    end,
    Tooltip = "Teleports to the selected location with detection bypass",
})

local GunModGroupBox = Tabs.Main:AddRightGroupbox("Weapon Modifications")

GunModGroupBox:AddButton({
    Text = "Enable Infinite Ammo",
    Func = function()
        local player = game:GetService("Players").LocalPlayer
        if not player.Character then
            Library:Notify({
                Title = "Error",
                Description = "Character not found!",
                Time = 3
            })
            return
        end

        local tool = player.Character:FindFirstChildOfClass("Tool")
        if not tool then
            Library:Notify({
                Title = "Error",
                Description = "No weapon equipped!",
                Time = 3
            })
            return
        end

        local success, settings = pcall(function()
            return require(tool:FindFirstChild("Setting"))
        end)

        if not success or not settings then
            Library:Notify({
                Title = "Error",
                Description = "Failed to access weapon settings!",
                Time = 5
            })
            return
        end

        settings.LimitedAmmoEnabled = false
        settings.MaxAmmo = 9e9
        settings.AmmoPerMag = 9e9
        settings.Ammo = 9e9

        Library:Notify({
            Title = "Success",
            Description = "Infinite Ammo Enabled",
            Time = 3
        })
    end,
    DoubleClick = false,
    Tooltip = "Grants unlimited ammunition for the equipped weapon"
})

local MoneyGroupBox = Tabs.Main:AddRightGroupbox("Currency System")
MoneyGroupBox:AddLabel("FEATURE IN DEVELOPMENT", true)

local BronxGroupBox = Tabs.Main:AddRightGroupbox("Bronx Features")
BronxGroupBox:AddButton({
    Text = "Open Bronx Market",
    Func = function()
        local player = game.Players.LocalPlayer
        local playerGui = player:WaitForChild("PlayerGui")
        local marketGui = playerGui:WaitForChild("Bronx Market 2", 5)
        
        if marketGui then
            marketGui.Enabled = not marketGui.Enabled
        else
            warn("Bronx Market 2 GUI element not found!")
        end
    end
})

BronxGroupBox:AddButton({
    Text = "Open Bronx Clothing",
    Func = function()
        local success, errorMsg = pcall(function()
            loadstring(game:HttpGet("https://raw.githubusercontent.com/DracoSwagBaby/ScriptsBanger/refs/heads/main/Bronx%20DripShop%20Script"))()
        end)
        
        if not success then
            warn("Failed to load Bronx Clothing script:", errorMsg)
        end
    end
})

-- ===============================
-- AUTOFARM TAB
-- ===============================

local AutoFarmGroupBox = Tabs.AutoFarm:AddLeftGroupbox("Construction Money Farm")

local constructionConfig = {
    enabled = false,
    stopAtMoney = 1000000,
    blocksPlaced = 0,
    totalEarned = 0,
    serverHop = false
}

local constructionToggle = AutoFarmGroupBox:AddToggle("ConstructionFarm", {
    Text = "Start Money Farm",
    Default = false,
    Callback = function(value)
        constructionConfig.enabled = value
        if value then
            Library:Notify({
                Title = "Construction Money Farm",
                Description = "Money farming system activated",
                Time = 3,
            })
            
            local Players = game:GetService("Players")
            local TeleportService = game:GetService("TeleportService")
            local HttpService = game:GetService("HttpService")
            local RunService = game:GetService("RunService")
            local VirtualUser = game:GetService("VirtualUser")

            local player = Players.LocalPlayer
            repeat task.wait() until player.Character

            local config = {
                antiAfk = true,
                autoServerHop = constructionConfig.serverHop,
                serverHopDelay = 25, 
                moneyThreshold = constructionConfig.stopAtMoney,
                blocksPlaced = constructionConfig.blocksPlaced,
                totalEarned = constructionConfig.totalEarned
            }

            do
                local constructionActive = true
                local lastServerHopTime = 0
                local moneyFarmActive = true
                local blocksPlaced = constructionConfig.blocksPlaced or 0
                local startTime = os.time()
                local totalEarned = constructionConfig.totalEarned or 0
                local friendList = {}

                local plywoodGrabPos = Vector3.new(-1726, 371, -1178)
                local startJobPos = Vector3.new(-1727, 371, -1171)
                local grabWoodPrompt = workspace.ConstructionStuff["Grab Wood"].Prompt
                local startJobPrompt = workspace.ConstructionStuff["Start Job"].Prompt

                local wallPrompts = {
                    {obj = workspace.ConstructionStuff["Wall1 Prompt"], prompt = workspace.ConstructionStuff["Wall1 Prompt"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall1 Prompt2"], prompt = workspace.ConstructionStuff["Wall1 Prompt2"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall1 Prompt3"], prompt = workspace.ConstructionStuff["Wall1 Prompt3"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall2 Prompt"], prompt = workspace.ConstructionStuff["Wall2 Prompt"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall2 Prompt2"], prompt = workspace.ConstructionStuff["Wall2 Prompt2"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall3 Prompt"], prompt = workspace.ConstructionStuff["Wall3 Prompt"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall3 Prompt2"], prompt = workspace.ConstructionStuff["Wall3 Prompt2"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall4 Prompt"], prompt = workspace.ConstructionStuff["Wall4 Prompt"].Prompt},
                    {obj = workspace.ConstructionStuff["Wall4 Prompt2"], prompt = workspace.ConstructionStuff["Wall4 Prompt2"].Prompt}
                }

                -- Professional overlay interface
                local blackScreen = Instance.new("ScreenGui")
                blackScreen.Name = "ProfessionalOverlay"
                blackScreen.IgnoreGuiInset = true
                blackScreen.ZIndexBehavior = Enum.ZIndexBehavior.Sibling
                blackScreen.Parent = player.PlayerGui

                local blackFrame = Instance.new("Frame")
                blackFrame.Size = UDim2.new(1, 0, 1, 0)
                blackFrame.Position = UDim2.new(0, 0, 0, 0)
                blackFrame.BackgroundColor3 = Color3.new(0, 0, 0)
                blackFrame.BackgroundTransparency = 1
                blackFrame.Parent = blackScreen

                local titleLabel = Instance.new("TextLabel")
                titleLabel.Size = UDim2.new(1, 0, 0, 20)
                titleLabel.Position = UDim2.new(0, 0, 0.45, 0)
                titleLabel.BackgroundTransparency = 1
                titleLabel.Text = "Bloxhub Professional System"
                titleLabel.TextColor3 = Color3.new(1, 1, 1)
                titleLabel.TextSize = 14
                titleLabel.Font = Enum.Font.Gotham
                titleLabel.Parent = blackFrame

                local subtitleLabel = Instance.new("TextLabel")
                subtitleLabel.Size = UDim2.new(1, 0, 0, 20)
                subtitleLabel.Position = UDim2.new(0, 0, 0.48, 0)
                subtitleLabel.BackgroundTransparency = 1
                subtitleLabel.Text = "Advanced Money Farming System"
                subtitleLabel.TextColor3 = Color3.new(1, 1, 1)
                subtitleLabel.TextSize = 14
                subtitleLabel.Font = Enum.Font.Gotham
                subtitleLabel.Parent = blackFrame

                local statusLabel = Instance.new("TextLabel")
                statusLabel.Size = UDim2.new(1, 0, 0, 20)
                statusLabel.Position = UDim2.new(0, 0, 0.51, 0)
                statusLabel.BackgroundTransparency = 1
                statusLabel.Text = "MONEY FARM ACTIVE"
                statusLabel.TextColor3 = Color3.new(0, 1, 0)
                statusLabel.TextSize = 14
                statusLabel.Font = Enum.Font.Gotham
                statusLabel.Parent = blackFrame

                local moneyLabel = Instance.new("TextLabel")
                moneyLabel.Size = UDim2.new(1, 0, 0, 20)
                moneyLabel.Position = UDim2.new(0, 0, 0.54, 0)
                moneyLabel.BackgroundTransparency = 1
                moneyLabel.Text = "$0"
                moneyLabel.TextColor3 = Color3.new(0, 1, 0)
                moneyLabel.TextSize = 16
                moneyLabel.Font = Enum.Font.GothamBold
                moneyLabel.Parent = blackFrame

                local statsLabel = Instance.new("TextLabel")
                statsLabel.Size = UDim2.new(1, 0, 0, 20)
                statsLabel.Position = UDim2.new(0, 0, 0.57, 0)
                statsLabel.BackgroundTransparency = 1
                statsLabel.Text = "Blocks: 0 | Rate: 0 per hour"
                statsLabel.TextColor3 = Color3.new(1, 1, 1)
                statsLabel.TextSize = 12
                statsLabel.Font = Enum.Font.Gotham
                statsLabel.Parent = blackFrame

                -- Core farming functions [Original implementation preserved]
                local function getPosition(obj)
                    return obj:IsA("BasePart") and obj.Position or 
                           (obj:FindFirstChild("HumanoidRootPart") and obj.HumanoidRootPart.Position) or
                           (obj:FindFirstChildWhichIsA("BasePart") and obj:FindFirstChildWhichIsA("BasePart").Position) or
                           Vector3.new(0, 0, 0)
                end

                local function triggerPrompt(prompt, spam)
                    if not prompt then return end
                    if fireproximityprompt then
                        if spam then
                            for _ = 1, 5 do 
                                fireproximityprompt(prompt)
                                task.wait(0.005) 
                            end
                        else
                            fireproximityprompt(prompt)
                        end
                    else
                        if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                            local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                            if humanoid then
                                humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                task.wait(0.1)
                            end
                            player.Character.HumanoidRootPart.CFrame = CFrame.new(prompt.Parent.Position)
                            task.wait(0.005) 
                            prompt:InputHoldBegin()
                            task.wait(prompt.HoldDuration)
                            prompt:InputHoldEnd()
                        end
                    end
                end

                local function equipPlywoodTool()
                    local backpack = player.Backpack
                    local tool = backpack:FindFirstChild("PlyWood")
                    if tool and player.Character then
                        player.Character:FindFirstChildOfClass("Humanoid"):EquipTool(tool)
                    end
                end

                local function hasPlywoodTool()
                    local backpack = player.Backpack
                    return backpack:FindFirstChild("PlyWood") or (player.Character and player.Character:FindFirstChild("PlyWood"))
                end

                local function grabPlywood()
                    if hasPlywoodTool() then
                        equipPlywoodTool()
                        task.wait(0.01) 
                        return
                    end
                    
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                            task.wait(0.1)
                        end
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(plywoodGrabPos)
                        task.wait(0.01) 
                        triggerPrompt(grabWoodPrompt, true)
                        equipPlywoodTool()
                    end
                end

                local function checkJobStarted()
                    local shirt = workspace:FindFirstChild(player.Name) and 
                                 workspace[player.Name]:FindFirstChild("Shirt")
                    return shirt and shirt.ShirtTemplate == "http://www.roblox.com/asset/?id=14044679418"
                end

                local function checkWallDone(wallObj)
                    local label = wallObj:FindFirstChild("Attachment") and 
                                 wallObj.Attachment:FindFirstChild("Gui") and 
                                 wallObj.Attachment.Gui:FindFirstChild("Label")
                    return label and label.Text:find("RESETS IN")
                end

                local function allWallsCompleted()
                    for _, wall in ipairs(wallPrompts) do
                        local label = wall.obj:FindFirstChild("Attachment") and 
                                     wall.obj.Attachment:FindFirstChild("Gui") and 
                                     wall.obj.Attachment.Gui:FindFirstChild("Label")
                        if not label or label.Text == "" then
                            return false
                        end
                    end
                    return true
                end

                local function anyWallReady()
                    for _, wall in ipairs(wallPrompts) do
                        local label = wall.obj:FindFirstChild("Attachment") and 
                                      wall.obj.Attachment:FindFirstChild("Gui") and 
                                      wall.obj.Attachment.Gui:FindFirstChild("Label")
                        if label and label.Text == "" then
                            return true
                        end
                    end
                    return false
                end

                local function processWalls()
                    local anyProcessed = false
                    for _, wall in ipairs(wallPrompts) do
                        if not constructionActive then break end
                        
                        if not checkWallDone(wall.obj) then
                            anyProcessed = true
                            blocksPlaced = blocksPlaced + 1
                            if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                                local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                                if humanoid then
                                    humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                                    task.wait(0.1)
                                end
                                player.Character.HumanoidRootPart.CFrame = CFrame.new(getPosition(wall.obj))
                                task.wait(0.005) 
                                triggerPrompt(wall.prompt, true)
                                grabPlywood()
                            end
                        end
                    end
                    return anyProcessed
                end

                local function startJob()
                    if player.Character and player.Character:FindFirstChild("HumanoidRootPart") then
                        local humanoid = player.Character:FindFirstChildOfClass("Humanoid")
                        if humanoid then
                            humanoid:ChangeState(Enum.HumanoidStateType.Freefall)
                            task.wait(0.1)
                        end
                        player.Character.HumanoidRootPart.CFrame = CFrame.new(startJobPos)
                        task.wait(0.05) 
                        if not checkJobStarted() then
                            triggerPrompt(startJobPrompt, false)
                            task.wait(0.05)
                            return checkJobStarted()
                        end
                        return true
                    end
                    return false
                end

                local function getMoney()
                    local moneyValue = 0
                    local moneyGui = player.PlayerGui:FindFirstChild("MoneyGui")
                    if moneyGui and moneyGui:FindFirstChild("Frame") and moneyGui.Frame:FindFirstChild("Frame") and moneyGui.Frame.Frame:FindFirstChild("TextLabel") then
                        local moneyText = moneyGui.Frame.Frame.TextLabel.Text
                        moneyValue = tonumber(moneyText:match("%d+")) or moneyValue
                    end
                    local stored = player:FindFirstChild("stored")
                    if stored and stored:FindFirstChild("Money") then
                        moneyValue = stored.Money.Value
                    end
                    return moneyValue
                end

                blackFrame.BackgroundTransparency = 0
                coroutine.wrap(function()
                    while constructionActive do
                        local currentTime = os.time()
                        local elapsedTime = currentTime - startTime
                        local currentMoney = getMoney()
                        local moneyPerHour = elapsedTime > 0 and math.floor((currentMoney / elapsedTime) * 3600) or 0
                        
                        moneyLabel.Text = "$"..tostring(currentMoney)
                        statsLabel.Text = string.format("Blocks: %d | Rate: %d per hour", blocksPlaced, moneyPerHour)
                        
                        constructionConfig.blocksPlaced = blocksPlaced
                        constructionConfig.totalEarned = currentMoney
                        
                        if currentMoney >= config.moneyThreshold then
                            constructionActive = false
                            break
                        end
                        
                        if not checkJobStarted() then
                            startJob()
                            task.wait(0.1)
                        end
                        
                        grabPlywood()
                        
                        local anyProcessed = processWalls()
                        if not anyProcessed then
                            if allWallsCompleted() and config.autoServerHop and os.time() - lastServerHopTime > config.serverHopDelay then
                                task.wait(0.1)
                                lastServerHopTime = os.time()
                                break
                            end
                            
                            local waitTime = 0
                            while not anyWallReady() and constructionActive and waitTime < 3 do
                                waitTime = waitTime + 0.01
                                task.wait(0.01)
                            end
                            
                            if constructionActive then
                                processWalls()
                            end
                        end
                        
                        task.wait()
                    end
                    
                    moneyFarmActive = false
                    blackFrame.BackgroundTransparency = 1
                    blackScreen:Destroy()
                    constructionToggle:SetValue(false)
                end)()

                player.Idled:Connect(function()
                    if config.antiAfk then
                        VirtualUser:CaptureController()
                        VirtualUser:ClickButton2(Vector2.new())
                    end
                end)
            end
        else
            Library:Notify({
                Title = "Construction Money Farm",
                Description = "Money farming system deactivated",
                Time = 3,
            })
